// PGG - Parser Generator Generator
{
  (* Here is the OCaml code *)
}

Program        -> Start (Statement)* End ;
Statement      -> Expr Semi ;
Expr           -> (
   Integer
 | Expr Plus Expr
 | LParen Expr RParen
) ;
Integer        -> [1-9][0-9]* { int_of_string $1 } ;  // specifying a tuple here
                                                      // causes the semantic action
                                                      // to return the corresponding
                                                      // data constructor
                                                      // Integer(int_of_string $1)
Plus           -> '+' ;
Semi           -> ';' ;          // specifying no semantic action causes a
                                 // default action {Semi} to be generated
LParen         -> '(' ;
RParen         -> ')' ;
Start          -> "start" ;
End            -> "end" ;
Whitesp        -> [ \t\r\n]+  {} ;  // specifying an empty semantic action causes the
                                    // token to be discarded
